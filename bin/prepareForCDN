#!/usr/bin/env node

var AssetGraph = require('../lib/AssetGraph'),
    transforms = require('../lib/transforms'),
    query = require('../lib/query'),
    urlTools = require('../lib/util/urlTools'),
    commandLineOptions = require('optimist').
        usage('$0 --root <inputRootDirectory> --outroot <outputRootDirectory> --cdnroot <url> <htmlFile>...').
        demand(['root', 'outroot', 'cdnroot']).
        argv,
    outroot = urlTools.fsDirToFileUrl(commandLineOptions.outroot),
    cdnroot = urlTools.ensureTrailingSlash(commandLineOptions.cdnroot);

new AssetGraph({root: commandLineOptions.root}).on('transform', function (transform, elapsedTime) {
    console.log((elapsedTime / 1000).toFixed(3) + " secs: " + transform.name);
}).on('error', function (err) {
    console.error(err.stack);
    process.exit(1);
}).transform(
    transforms.loadAssets(commandLineOptions._.map(urlTools.fsFilePathToFileUrl)),
    transforms.populate({to: query.not(/^https?:/)}),
    transforms.moveAssetsToNewRoot({type: ['PNG', 'GIF', 'JPEG', 'ICO', 'CSS', 'JavaScript', 'CacheManifest']}, cdnroot),
    transforms.renameAssetsToMD5Prefix({type: query.not(['HTML', 'CacheManifest']), url: query.defined}),
    transforms.parallel(
        transforms.writeAssetsToDisc({url: /^file:/}, outroot),
        transforms.writeAssetsToDisc({url: query.createPrefixMatcher(cdnroot)}, outroot, cdnroot)
    )
);
